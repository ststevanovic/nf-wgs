params {
    publish_dir_mode            = "copy"
    
    cpus                        = { check_max( 1    * task.attempt, 'cpus'   ) }
    memory                      = { check_max( 6.GB * task.attempt, 'memory' ) }
    time                        = { check_max( 4.h  * task.attempt, 'time'   ) }

    errorStrategy               = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
    maxRetries                  = 1
    maxErrors                   = '-1'


    // Testing FIFO
    rootDir             = "${baseDir}/../.."


    // Standard FIFO
    reads                   = "$rootDir/data/reads/wgs-reads/*_{1,2}.fq.gz"
    outdir                 = "$rootDir/results/TEST/"
    sequencing_center       = null
    
    // Reference genome
    fasta                   = "$rootDir/data/reference_genome/test.fa"
    fai                     = "$rootDir/data/reference_genome/test.fa.fai"
    golden_indel_gz         = 's3://ngi-igenomes/igenomes/Homo_sapiens/GATK/hg19/Mills_and_1000G_gold_standard.indels.hg19.sites.vcf.gz'
    golden_indel_idx_gz     = 's3://ngi-igenomes/igenomes/Homo_sapiens/GATK/hg19/Mills_and_1000G_gold_standard.indels.hg19.sites.vcf.idx.gz'
    
    // TODO: --> http://www.htslib.org/doc/tabix.html
    // TODO: snpdb by date and version
    dbsnp_gz             = "$rootDir/data/dbsnp/test.dbsnp.vcf.gz"
    dbsnp_idx_gz         = "$rootDir/data/dbsnp/test.dbsnp.vcf.gz.tbi" 
      
}

process {
    withName:BWAINDEX {
        container = 'bwa-sam:latest'
        publishDir = [
            path: { "${params.outdir}/GATK" },
            mode: params.publish_dir_mode

        ]
    }
    withName:BWAMEM {
        container = 'bwa-sam:latest'
        publishDir = [
            path: { "${params.outdir}/BWA" },
            mode: params.publish_dir_mode
        ]
    }
    withName:BWAMEM_SAMTOOLS_SORT {
        container = 'bwa-sam:latest'
        publishDir = [
            path: {"${params.outdir}/GATK"},
            mode: params.publish_dir_mode
        ]
    }
    withName:MARKDUPLICATES {
        container = 'gatk:latest'
        publishDir = [
            path: { "${params.outdir}/GATK" },
            mode: params.publish_dir_mode

        ]
    }
    withName: dictionary {
        container = 'gatk:latest'
        publishDir = [
            path: { "${params.outdir}/GATK" },
            mode: params.publish_dir_mode

        ]
    }
    withName:BASERECALIBRATOR {
        container = 'gatk:latest'
        publishDir = [
            path: { "${params.outdir}/GATK" },
            mode: params.publish_dir_mode

        ]
    }
    withName:APPLYBQSR {
        container = 'gatk:latest'
        publishDir = [
            path: { "${params.outdir}/GATK" },
            mode: params.publish_dir_mode

        ]
    }

}

docker {
    enabled = true
}
   

     