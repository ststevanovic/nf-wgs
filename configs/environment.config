params {
   
}

// named
process { 

    withName:FASTQC {
        container   = 'fastqc:v0.11.9'
        publishDir  = [
            path: "${params.outdir}/FastQC"
        ]
    }

    withName:BWAINDEX {
        container   = 'bwa-sam:latest'
        publishDir  = [
            path: { "${params.outdir}/GATK" },
            mode: params.publish_dir_mode

        ]
    }

    withName:BWAMEM_SAMTOOLS_SORT {
        container   = 'bwa-sam:latest'
        publishDir  = [
            path: {"${params.outdir}/GATK"},
            mode: params.publish_dir_mode
        ]
    }
    withName:MARKDUPLICATES {
        container   = 'gatk:latest'
        publishDir  = [
            path: { "${params.outdir}/GATK" },
            mode: params.publish_dir_mode

        ]
    }
    withName: dictionary {
        container   = 'gatk:latest'
        publishDir  = [
            path: { "${params.outdir}/GATK" },
            mode: params.publish_dir_mode

        ]
    }
    withName:BASERECALIBRATOR {
        container   = 'gatk:latest'
        publishDir  = [
            path: { "${params.outdir}/GATK" },
            mode: params.publish_dir_mode

        ]
    }
    withName:APPLYBQSR {
        container   = 'gatk:latest'
        publishDir  = [
            path: { "${params.outdir}/GATK" },
            mode: params.publish_dir_mode

        ]
    }

    withName: HaplotypeCaller {
        container   = 'gatk:latest'
        publishDir  = [
            path: params.outdir,
            mode: params.publish_dir_mode
        ]
    }
    withName: Manta {
        container   = 'mantasimple:v1.6.0'
        publishDir  = [
            path: params.outdir,
            mode: params.publish_dir_mode
        ]
    }

    withName: QUALIMAP { 
        container   = 'qualimap:latest'
        publishDir  = [
            path: { "${params.outdir}/individual_reports" },
            mode: 'copy'
        ]
    }
    
    withName: SNPEFF {
        container   = 'snpeff:v4.3'
        publishDir  = [ 
            path: params.outdir, 
            mode: params.publish_dir_mode 
        ]  
    }

    // Test if it works
    withName: VEP* {
        container   = 'vep:v99.2'
    }
   
}

// labeled
process {

    withLabel: big_mem {
        cpus            = 16
        memory          = 64.GB
        queue           = 'long'
        max_time        = '240.h'
    }
    
    withLabel: med_mem {
        cpus            = 8
        memory          = 32.GB
        queue           = 'long'
        max_time        = '72.h'
    }

    withLabel: sml_mem {
        cpus            = 4
        memory          = 16.GB
        queue           = 'short'
        max_time        = '12.h'
    }

    withLabel: cus_mem {
        cpus            = 1
        memory          = 40.GB
    }

    withLabel: powerup {
        cpus            = 8
        memory          = 8.GB
    }
    
    withLabel: bwamem_run_settings { 
        cpus            = { check_max( 1    * task.attempt, 'cpus'   ) }
        memory          = { check_max( 6.GB * task.attempt, 'memory' ) }
        time            = { check_max( 4.h  * task.attempt, 'time'   ) }
        errorStrategy   = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
        maxRetries      = 1
        maxErrors       = '-1'
    }
    
    withLabel: fastqc_run_settings {
        cpus            = 2
        memory          = 1.GB
        queue           = 'default'
    }

    withLabel: qualimap_run_settings {
        cpu             = 2
        mem             = 4
    }
}
   

     